# Copyright 2018-2020 The OpenEBS Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: build

on: ['push']

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: '.'
          pattern: '*.sh'
          exclude: './vendor/*'

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14.7
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: verify license
      run: make check-license

    - name: verify tests
      run: make test

    - name: Verify corrections
      run: make verify-src

    - name: Upload Coverage Report
      uses: codecov/codecov-action@v1
  
  exporter:
    runs-on: ubuntu-latest
    needs: ['lint', 'test']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "develop" ]; then
            CI_TAG="ci"
          fi
          echo "::set-env name=TAG::${CI_TAG}"
          echo "::set-env name=BRANCH::${BRANCH}"
          echo "BRANCH: ${BRANCH}"
          echo "TAG: ${CI_TAG}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Image
        env:
          IMAGE_ORG: ${{ secrets.IMAGE_ORG}}
        run: |
          make docker.buildx.exporter
          make buildx.push.exporter

